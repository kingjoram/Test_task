// Code generated by MockGen. DO NOT EDIT.
// Source: irepo.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"
	models "test/pkg/models"

	gomock "github.com/golang/mock/gomock"
)

// MockIDbRepo is a mock of IDbRepo interface.
type MockIDbRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIDbRepoMockRecorder
}

// MockIDbRepoMockRecorder is the mock recorder for MockIDbRepo.
type MockIDbRepoMockRecorder struct {
	mock *MockIDbRepo
}

// NewMockIDbRepo creates a new mock instance.
func NewMockIDbRepo(ctrl *gomock.Controller) *MockIDbRepo {
	mock := &MockIDbRepo{ctrl: ctrl}
	mock.recorder = &MockIDbRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDbRepo) EXPECT() *MockIDbRepoMockRecorder {
	return m.recorder
}

// GetId mocks base method.
func (m *MockIDbRepo) GetId() (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetId")
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetId indicates an expected call of GetId.
func (mr *MockIDbRepoMockRecorder) GetId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetId", reflect.TypeOf((*MockIDbRepo)(nil).GetId))
}

// GetLong mocks base method.
func (m *MockIDbRepo) GetLong(short string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLong", short)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLong indicates an expected call of GetLong.
func (mr *MockIDbRepoMockRecorder) GetLong(short interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLong", reflect.TypeOf((*MockIDbRepo)(nil).GetLong), short)
}

// GetShort mocks base method.
func (m *MockIDbRepo) GetShort(long string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShort", long)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShort indicates an expected call of GetShort.
func (mr *MockIDbRepoMockRecorder) GetShort(long interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShort", reflect.TypeOf((*MockIDbRepo)(nil).GetShort), long)
}

// InsertUrl mocks base method.
func (m *MockIDbRepo) InsertUrl(url models.Url) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUrl", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertUrl indicates an expected call of InsertUrl.
func (mr *MockIDbRepoMockRecorder) InsertUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUrl", reflect.TypeOf((*MockIDbRepo)(nil).InsertUrl), url)
}
